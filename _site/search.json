[
  {
    "objectID": "projects/project_template.html",
    "href": "projects/project_template.html",
    "title": "Project Template",
    "section": "",
    "text": "library(tidyverse)\nlibrary(cowplot)\nlibrary(calendR)"
  },
  {
    "objectID": "projects/project_template.html#packages-used",
    "href": "projects/project_template.html#packages-used",
    "title": "Project Template",
    "section": "",
    "text": "library(tidyverse)\nlibrary(cowplot)\nlibrary(calendR)"
  },
  {
    "objectID": "projects/project_template.html#reading-in-csv-file-and-checking-out-data",
    "href": "projects/project_template.html#reading-in-csv-file-and-checking-out-data",
    "title": "Project Template",
    "section": "Reading in CSV file and Checking Out Data",
    "text": "Reading in CSV file and Checking Out Data\n\ndata &lt;- read.csv('IntroToR-SubmissionsDecodedMasked-07172025.csv')"
  },
  {
    "objectID": "projects/project_template.html#cleaning",
    "href": "projects/project_template.html#cleaning",
    "title": "Project Template",
    "section": "Cleaning",
    "text": "Cleaning\n\nSeperating datetime to date and time, seperate columns\nCast date variable as Date\nTurn course name to factors\nTurn student id to factors\n\n\ndata &lt;- data %&gt;% separate_wider_delim(datetime, \" \", names = c(\"date\", \"time\"))\ndata$date &lt;- as.Date(data$date)\ndata$course_name &lt;- factor(data$course_name, levels = c('R Programming', 'Exploratory_Data_Analysis'))\ndata$student_id &lt;- factor(data$student_id)"
  },
  {
    "objectID": "projects/project_template.html#quick-glimpse",
    "href": "projects/project_template.html#quick-glimpse",
    "title": "Project Template",
    "section": "Quick Glimpse",
    "text": "Quick Glimpse\n\nglimpse(data)\n\nRows: 5,947\nColumns: 9\n$ course_name     &lt;fct&gt; Exploratory_Data_Analysis, Exploratory_Data_Analysis, …\n$ lesson_name     &lt;chr&gt; \"Principles_of_Analytic_Graphs\", \"Principles_of_Analyt…\n$ question_number &lt;int&gt; 3, 7, 11, 14, 21, 21, 21, 25, 32, 33, 34, 35, 37, 3, 5…\n$ correct         &lt;lgl&gt; TRUE, TRUE, TRUE, TRUE, FALSE, FALSE, TRUE, TRUE, TRUE…\n$ attempt         &lt;int&gt; 1, 1, 1, 1, 1, 2, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ skipped         &lt;lgl&gt; FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE…\n$ date            &lt;date&gt; 2025-07-14, 2025-07-14, 2025-07-14, 2025-07-14, 2025-…\n$ time            &lt;chr&gt; \"23:28:00.44013\", \"23:29:13.22424\", \"23:29:54.15472\", …\n$ student_id      &lt;fct&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …"
  },
  {
    "objectID": "projects/project_template.html#looking-at-class-data-all-together",
    "href": "projects/project_template.html#looking-at-class-data-all-together",
    "title": "Project Template",
    "section": "Looking at Class Data All Together",
    "text": "Looking at Class Data All Together\n\n#Attempts by Question for each course-lesson\ndata |&gt; \n  ggplot(aes(x=question_number, y=attempt)) +\n  geom_col() +\n  facet_wrap(course_name~lesson_name, scales='free') + \n  theme_cowplot() +\n  theme(strip.text.x = element_text(size = 8)) +\n  labs(x='Q #', y='# Attempts')\n\n\n\n\n\n\n\n#Dates they were completed\ndata |&gt; \n  ggplot(aes(x=date, y=attempt)) +\n  geom_col() +\n  scale_x_date(date_breaks = \"1 day\" , date_labels = \"%b %d\") +\n  facet_wrap(course_name~lesson_name, scales='free') + \n  theme_cowplot() +\n  theme(axis.text.x = element_text(angle=90, hjust=1), strip.text.x = element_text(size = 8)) +\n  labs(x='Date', y='# Attempts')\n\n\n\n\n\n\n\n#Heatmap of dates lessons were completed\ncalendar_df_all &lt;- data %&gt;% count(date)\ndays_all &lt;- calendar_df_all$n\ndays_all &lt;- c(days_all, rep(0,14))\n\ncalendR(from = \"2025-06-29\",\n        to = \"2025-07-30\",\n        special.days = days_all,\n        gradient = TRUE,\n        low.col = \"white\",\n        special.col = \"#FF0000\")\n\n\n\n\n\n\n\n#Look a the hour of the day they are completed\ndata |&gt; \n  ggplot(aes(x=as.POSIXct(time, format=\"%H:%M\"), y=attempt)) +\n  geom_col() +\n  scale_x_datetime(\n            date_breaks = \"5 hour\",\n            date_labels = \"%H:%M\") +\n  facet_wrap(course_name~lesson_name, scales='free') + \n  theme_cowplot() +\n  theme(axis.text.x = element_text(angle=90, hjust=1), strip.text.x = element_text(size = 8)) +\n  labs(x='Time', y='# Attempts')"
  },
  {
    "objectID": "projects/project_template.html#assignment-1",
    "href": "projects/project_template.html#assignment-1",
    "title": "Project Template",
    "section": "Assignment 1",
    "text": "Assignment 1\n\nassign_1 = data |&gt; filter(course_name == 'R Programming')\n\n#Attempts by Question for each course-lesson\nassign_1 |&gt;\n  ggplot(aes(x=question_number, y=attempt)) +\n  geom_col() +\n  facet_grid(~lesson_name, scales='free_x') +\n  theme_cowplot() +\n  theme(strip.text.x = element_text(size = 8)) +\n  labs(x='Q #', y='# Attempts')\n\n\n\n\n\n\n\n##Average of attempts for each lesson of Assignment\nlesson_counts_1 &lt;- assign_1 |&gt; count(lesson_name, question_number, student_id)\nlesson_counts_1$question_number = as.factor(lesson_counts_1$question_number)\nlesson_avgs_1 &lt;-  lesson_counts_1 %&gt;% group_by(lesson_name, question_number) %&gt;% summarise(avg = mean(n))\n\n##Compare for all lessons\nlesson_avgs_1 |&gt;\n  ggplot(aes(x=lesson_name, y=avg)) +\n  geom_boxplot(alpha = 0.5) +\n  geom_jitter() +\n  theme_cowplot() +\n  theme(axis.text.x = element_text(angle=90, hjust=1), strip.text.x = element_text(size = 8)) +\n  labs(y='Avg Attempts', x='Lesson')\n\n\n\n\n\n\n\n#Looking at dates completed\nassign_1 |&gt; \n  ggplot(aes(x=date, y=attempt)) +\n  geom_col() +\n  facet_grid(~lesson_name, scales='free_y') + \n  theme_cowplot() +\n  theme(axis.text.x = element_text(angle=90, hjust=1), strip.text.x = element_text(size = 8)) +\n  labs(x='Date', y='# Attempts')\n\n\n\n\n\n\n\n#Calendar Heatmap\ncalendar_df_1 &lt;- assign_1 %&gt;% count(date)\ndays_1 &lt;- calendar_df_1$n\ndays_1 &lt;- c(days_1, rep(0,16))\n\ncalendR(from = \"2025-06-29\",\n        to = \"2025-07-30\",\n        special.days = days_1,\n        gradient = TRUE,\n        low.col = \"white\",\n        special.col = \"#FF0000\")\n\n\n\n\n\n\n\n#Looking at time of completion for each lesson\nassign_1 |&gt; \n  ggplot(aes(x=as.POSIXct(time, format=\"%H:%M\"), y=attempt)) +\n  geom_col() +\n  scale_x_datetime(\n            date_breaks = \"5 hour\",\n            date_labels = \"%H:%M\") +\n  facet_grid(~lesson_name, scales='free_y') + \n  theme_cowplot() +\n  theme(axis.text.x = element_text(angle=90, hjust=1), strip.text.x = element_text(size = 8)) +\n  labs(x='Time', y='# Attempts')"
  },
  {
    "objectID": "projects/project_template.html#assignment-2",
    "href": "projects/project_template.html#assignment-2",
    "title": "Project Template",
    "section": "Assignment 2",
    "text": "Assignment 2\n\nassign_2 = data |&gt; filter(course_name == 'Exploratory_Data_Analysis')\n\n#Attempts by Question for each course-lesson\nassign_2 |&gt; \n  ggplot(aes(x=question_number, y=attempt)) +\n  geom_col() +\n  facet_grid(~lesson_name, scales='free_x') + \n  theme_cowplot() +\n  theme(strip.text.x = element_text(size = 8)) +\n  labs(x='Q #', y='# Attempts')\n\n\n\n\n\n\n\n##Average of attempts for each lesson of Assignment\nlesson_counts_2 &lt;- assign_2 |&gt; count(lesson_name, question_number, student_id)\nlesson_counts_2$question_number = as.factor(lesson_counts_2$question_number)\nlesson_avgs_2 &lt;-  lesson_counts_2 %&gt;% group_by(lesson_name, question_number) %&gt;% summarise(avg = mean(n))\n\n##Compare for all lessons\nlesson_avgs_2 |&gt;\n  ggplot(aes(x=lesson_name, y=avg)) +\n  geom_boxplot(alpha = 0.5) +\n  geom_jitter() +\n  theme_cowplot() +\n  theme(axis.text.x = element_text(angle=90, hjust=1), strip.text.x = element_text(size = 8)) +\n  labs(y='Avg Attempts', x='Lesson')\n\n\n\n\n\n\n\n#Looking at dates completed\nassign_2 |&gt; \n  ggplot(aes(x=date, y=attempt)) +\n  geom_col() +\n  facet_grid(~lesson_name, scales='free_y') + \n  theme_cowplot() +\n  theme(axis.text.x = element_text(angle=90, hjust=1), strip.text.x = element_text(size = 8)) +\n  labs(x='Date', y='# Attempts')\n\n\n\n\n\n\n\n#Calendar Heatmap\ncalendar_df_2 &lt;- assign_2 %&gt;% count(date)\ndays_2 &lt;- calendar_df_2$n\ndays_2 &lt;- c(rep(0,7), days_2, rep(0,13))\n\ncalendR(from = \"2025-07-01\",\n        to = \"2025-07-30\",\n        special.days = days_2,\n        gradient = TRUE,\n        low.col = \"white\",\n        special.col = \"#FF0000\")\n\n\n\n\n\n\n\n#Looking at time of completion for each lesson\nassign_2 |&gt; \n  ggplot(aes(x=as.POSIXct(time, format=\"%H:%M\"), y=attempt)) +\n  geom_col() +\n  scale_x_datetime(\n            date_breaks = \"5 hour\",\n            date_labels = \"%H:%M\") +\n  facet_grid(~lesson_name, scales='free_y') + \n  theme_cowplot() +\n  theme(axis.text.x = element_text(angle=90, hjust=1), strip.text.x = element_text(size = 8)) +\n  labs(x='Time', y='# Attempts')"
  },
  {
    "objectID": "projects/project_title.html",
    "href": "projects/project_title.html",
    "title": "Project Title",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "projects.html",
    "href": "projects.html",
    "title": "Projects",
    "section": "",
    "text": "Date\n\n\nTitle\n\n\nAuthor\n\n\n\n\n\n\n07-18-2025\n\n\nProject Template\n\n\nEleana Cabello\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "projects/project_example.html",
    "href": "projects/project_example.html",
    "title": "Project Template",
    "section": "",
    "text": "library(tidyverse)\nlibrary(cowplot)\nlibrary(calendR)"
  },
  {
    "objectID": "projects/project_example.html#packages-used",
    "href": "projects/project_example.html#packages-used",
    "title": "Project Template",
    "section": "",
    "text": "library(tidyverse)\nlibrary(cowplot)\nlibrary(calendR)"
  },
  {
    "objectID": "projects/project_example.html#reading-in-csv-file-and-checking-out-data",
    "href": "projects/project_example.html#reading-in-csv-file-and-checking-out-data",
    "title": "Project Template",
    "section": "Reading in CSV file and Checking Out Data",
    "text": "Reading in CSV file and Checking Out Data\n\ndata &lt;- read.csv('IntroToR-SubmissionsDecodedMasked-07172025.csv')"
  },
  {
    "objectID": "projects/project_example.html#cleaning",
    "href": "projects/project_example.html#cleaning",
    "title": "Project Template",
    "section": "Cleaning",
    "text": "Cleaning\n\nSeperating datetime to date and time, seperate columns\nCast date variable as Date\nTurn course name to factors\nTurn student id to factors\n\n\ndata &lt;- data %&gt;% separate_wider_delim(datetime, \" \", names = c(\"date\", \"time\"))\ndata$date &lt;- as.Date(data$date)\ndata$course_name &lt;- factor(data$course_name, levels = c('R Programming', 'Exploratory_Data_Analysis'))\ndata$student_id &lt;- factor(data$student_id)"
  },
  {
    "objectID": "projects/project_example.html#quick-glimpse",
    "href": "projects/project_example.html#quick-glimpse",
    "title": "Project Template",
    "section": "Quick Glimpse",
    "text": "Quick Glimpse\n\nglimpse(data)\n\nRows: 5,947\nColumns: 9\n$ course_name     &lt;fct&gt; Exploratory_Data_Analysis, Exploratory_Data_Analysis, …\n$ lesson_name     &lt;chr&gt; \"Principles_of_Analytic_Graphs\", \"Principles_of_Analyt…\n$ question_number &lt;int&gt; 3, 7, 11, 14, 21, 21, 21, 25, 32, 33, 34, 35, 37, 3, 5…\n$ correct         &lt;lgl&gt; TRUE, TRUE, TRUE, TRUE, FALSE, FALSE, TRUE, TRUE, TRUE…\n$ attempt         &lt;int&gt; 1, 1, 1, 1, 1, 2, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ skipped         &lt;lgl&gt; FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE…\n$ date            &lt;date&gt; 2025-07-14, 2025-07-14, 2025-07-14, 2025-07-14, 2025-…\n$ time            &lt;chr&gt; \"23:28:00.44013\", \"23:29:13.22424\", \"23:29:54.15472\", …\n$ student_id      &lt;fct&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …"
  },
  {
    "objectID": "projects/project_example.html#looking-at-class-data-all-together",
    "href": "projects/project_example.html#looking-at-class-data-all-together",
    "title": "Project Template",
    "section": "Looking at Class Data All Together",
    "text": "Looking at Class Data All Together\n\n#Attempts by Question for each course-lesson\ndata |&gt; \n  ggplot(aes(x=question_number, y=attempt)) +\n  geom_col() +\n  facet_wrap(course_name~lesson_name, scales='free') + \n  theme_cowplot() +\n  theme(strip.text.x = element_text(size = 8)) +\n  labs(x='Q #', y='# Attempts')\n\n\n\n\n\n\n\n#Dates they were completed\ndata |&gt; \n  ggplot(aes(x=date, y=attempt)) +\n  geom_col() +\n  scale_x_date(date_breaks = \"1 day\" , date_labels = \"%b %d\") +\n  facet_wrap(course_name~lesson_name, scales='free') + \n  theme_cowplot() +\n  theme(axis.text.x = element_text(angle=90, hjust=1), strip.text.x = element_text(size = 8)) +\n  labs(x='Date', y='# Attempts')\n\n\n\n\n\n\n\n#Heatmap of dates lessons were completed\ncalendar_df_all &lt;- data %&gt;% count(date)\ndays_all &lt;- calendar_df_all$n\ndays_all &lt;- c(days_all, rep(0,14))\n\ncalendR(from = \"2025-06-29\",\n        to = \"2025-07-30\",\n        special.days = days_all,\n        gradient = TRUE,\n        low.col = \"white\",\n        special.col = \"#FF0000\")\n\n\n\n\n\n\n\n#Look a the hour of the day they are completed\ndata |&gt; \n  ggplot(aes(x=as.POSIXct(time, format=\"%H:%M\"), y=attempt)) +\n  geom_col() +\n  scale_x_datetime(\n            date_breaks = \"5 hour\",\n            date_labels = \"%H:%M\") +\n  facet_wrap(course_name~lesson_name, scales='free') + \n  theme_cowplot() +\n  theme(axis.text.x = element_text(angle=90, hjust=1), strip.text.x = element_text(size = 8)) +\n  labs(x='Time', y='# Attempts')"
  },
  {
    "objectID": "projects/project_example.html#assignment-1",
    "href": "projects/project_example.html#assignment-1",
    "title": "Project Template",
    "section": "Assignment 1",
    "text": "Assignment 1\n\nassign_1 = data |&gt; filter(course_name == 'R Programming')\n\n#Attempts by Question for each course-lesson\nassign_1 |&gt;\n  ggplot(aes(x=question_number, y=attempt)) +\n  geom_col() +\n  facet_grid(~lesson_name, scales='free_x') +\n  theme_cowplot() +\n  theme(strip.text.x = element_text(size = 8)) +\n  labs(x='Q #', y='# Attempts')\n\n\n\n\n\n\n\n##Average of attempts for each lesson of Assignment\nlesson_counts_1 &lt;- assign_1 |&gt; count(lesson_name, question_number, student_id)\nlesson_counts_1$question_number = as.factor(lesson_counts_1$question_number)\nlesson_avgs_1 &lt;-  lesson_counts_1 %&gt;% group_by(lesson_name, question_number) %&gt;% summarise(avg = mean(n))\n\n##Compare for all lessons\nlesson_avgs_1 |&gt;\n  ggplot(aes(x=lesson_name, y=avg)) +\n  geom_boxplot(alpha = 0.5) +\n  geom_jitter() +\n  theme_cowplot() +\n  theme(axis.text.x = element_text(angle=90, hjust=1), strip.text.x = element_text(size = 8)) +\n  labs(y='Avg Attempts', x='Lesson')\n\n\n\n\n\n\n\n#Looking at dates completed\nassign_1 |&gt; \n  ggplot(aes(x=date, y=attempt)) +\n  geom_col() +\n  facet_grid(~lesson_name, scales='free_y') + \n  theme_cowplot() +\n  theme(axis.text.x = element_text(angle=90, hjust=1), strip.text.x = element_text(size = 8)) +\n  labs(x='Date', y='# Attempts')\n\n\n\n\n\n\n\n#Calendar Heatmap\ncalendar_df_1 &lt;- assign_1 %&gt;% count(date)\ndays_1 &lt;- calendar_df_1$n\ndays_1 &lt;- c(days_1, rep(0,16))\n\ncalendR(from = \"2025-06-29\",\n        to = \"2025-07-30\",\n        special.days = days_1,\n        gradient = TRUE,\n        low.col = \"white\",\n        special.col = \"#FF0000\")\n\n\n\n\n\n\n\n#Looking at time of completion for each lesson\nassign_1 |&gt; \n  ggplot(aes(x=as.POSIXct(time, format=\"%H:%M\"), y=attempt)) +\n  geom_col() +\n  scale_x_datetime(\n            date_breaks = \"5 hour\",\n            date_labels = \"%H:%M\")\n\n\n\n\n\n\n\n  theme_cowplot() +\n  theme(axis.text.x = element_text(angle=90, hjust=1), strip.text.x = element_text(size = 8)) +\n  labs(x='Time', y='# Attempts')\n\nList of 138\n $ line                            :List of 6\n  ..$ colour       : chr \"black\"\n  ..$ linewidth    : num 0.5\n  ..$ linetype     : num 1\n  ..$ lineend      : chr \"butt\"\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ rect                            :List of 5\n  ..$ fill         : logi NA\n  ..$ colour       : logi NA\n  ..$ linewidth    : num 0.5\n  ..$ linetype     : num 1\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ text                            :List of 11\n  ..$ family       : chr \"\"\n  ..$ face         : chr \"plain\"\n  ..$ colour       : chr \"black\"\n  ..$ size         : num 14\n  ..$ hjust        : num 0.5\n  ..$ vjust        : num 0.5\n  ..$ angle        : num 0\n  ..$ lineheight   : num 0.9\n  ..$ margin       : 'margin' num [1:4] 0points 0points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ title                           : NULL\n $ aspect.ratio                    : NULL\n $ axis.title                      : NULL\n $ axis.title.x                    :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 1\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 3.5points 0points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.x.top                :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 0\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 0points 3.5points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.x.bottom             : NULL\n $ axis.title.y                    :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 1\n  ..$ angle        : num 90\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 3.5points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.y.left               : NULL\n $ axis.title.y.right              :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 0\n  ..$ angle        : num -90\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 0points 0points 3.5points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text                       :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : chr \"black\"\n  ..$ size         : num 12\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x                     :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : num 1\n  ..$ vjust        : num 1\n  ..$ angle        : num 90\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 3points 0points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi FALSE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x.top                 :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 0\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 0points 3points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x.bottom              : NULL\n $ axis.text.y                     :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : num 1\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 3points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.y.left                : NULL\n $ axis.text.y.right               :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 0points 0points 3points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.theta                 : NULL\n $ axis.text.r                     :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : num 0.5\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 2.8points 0points 2.8points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.ticks                      :List of 6\n  ..$ colour       : chr \"black\"\n  ..$ linewidth    : num 0.5\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ axis.ticks.x                    : NULL\n $ axis.ticks.x.top                : NULL\n $ axis.ticks.x.bottom             : NULL\n $ axis.ticks.y                    : NULL\n $ axis.ticks.y.left               : NULL\n $ axis.ticks.y.right              : NULL\n $ axis.ticks.theta                : NULL\n $ axis.ticks.r                    : NULL\n $ axis.minor.ticks.x.top          : NULL\n $ axis.minor.ticks.x.bottom       : NULL\n $ axis.minor.ticks.y.left         : NULL\n $ axis.minor.ticks.y.right        : NULL\n $ axis.minor.ticks.theta          : NULL\n $ axis.minor.ticks.r              : NULL\n $ axis.ticks.length               : 'simpleUnit' num 3.5points\n  ..- attr(*, \"unit\")= int 8\n $ axis.ticks.length.x             : NULL\n $ axis.ticks.length.x.top         : NULL\n $ axis.ticks.length.x.bottom      : NULL\n $ axis.ticks.length.y             : NULL\n $ axis.ticks.length.y.left        : NULL\n $ axis.ticks.length.y.right       : NULL\n $ axis.ticks.length.theta         : NULL\n $ axis.ticks.length.r             : NULL\n $ axis.minor.ticks.length         : 'rel' num 0.75\n $ axis.minor.ticks.length.x       : NULL\n $ axis.minor.ticks.length.x.top   : NULL\n $ axis.minor.ticks.length.x.bottom: NULL\n $ axis.minor.ticks.length.y       : NULL\n $ axis.minor.ticks.length.y.left  : NULL\n $ axis.minor.ticks.length.y.right : NULL\n $ axis.minor.ticks.length.theta   : NULL\n $ axis.minor.ticks.length.r       : NULL\n $ axis.line                       :List of 6\n  ..$ colour       : chr \"black\"\n  ..$ linewidth    : num 0.5\n  ..$ linetype     : NULL\n  ..$ lineend      : chr \"square\"\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ axis.line.x                     : NULL\n $ axis.line.x.top                 : NULL\n $ axis.line.x.bottom              : NULL\n $ axis.line.y                     : NULL\n $ axis.line.y.left                : NULL\n $ axis.line.y.right               : NULL\n $ axis.line.theta                 : NULL\n $ axis.line.r                     : NULL\n $ legend.background               : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ legend.margin                   : 'margin' num [1:4] 0points 0points 0points 0points\n  ..- attr(*, \"unit\")= int 8\n $ legend.spacing                  : 'simpleUnit' num 14points\n  ..- attr(*, \"unit\")= int 8\n $ legend.spacing.x                : NULL\n $ legend.spacing.y                : NULL\n $ legend.key                      : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ legend.key.size                 : 'simpleUnit' num 15.4points\n  ..- attr(*, \"unit\")= int 8\n $ legend.key.height               : NULL\n $ legend.key.width                : NULL\n $ legend.key.spacing              : 'simpleUnit' num 7points\n  ..- attr(*, \"unit\")= int 8\n $ legend.key.spacing.x            : NULL\n $ legend.key.spacing.y            : NULL\n $ legend.frame                    : NULL\n $ legend.ticks                    : NULL\n $ legend.ticks.length             : 'rel' num 0.2\n $ legend.axis.line                : NULL\n $ legend.text                     :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 0.857\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ legend.text.position            : NULL\n $ legend.title                    :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ legend.title.position           : NULL\n $ legend.position                 : chr \"right\"\n $ legend.position.inside          : NULL\n $ legend.direction                : NULL\n $ legend.byrow                    : NULL\n $ legend.justification            : chr [1:2] \"left\" \"center\"\n $ legend.justification.top        : NULL\n $ legend.justification.bottom     : NULL\n $ legend.justification.left       : NULL\n $ legend.justification.right      : NULL\n $ legend.justification.inside     : NULL\n $ legend.location                 : NULL\n $ legend.box                      : NULL\n $ legend.box.just                 : NULL\n $ legend.box.margin               : 'margin' num [1:4] 0points 0points 0points 0points\n  ..- attr(*, \"unit\")= int 8\n $ legend.box.background           : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ legend.box.spacing              : 'simpleUnit' num 14points\n  ..- attr(*, \"unit\")= int 8\n  [list output truncated]\n - attr(*, \"class\")= chr [1:2] \"theme\" \"gg\"\n - attr(*, \"complete\")= logi TRUE\n - attr(*, \"validate\")= logi TRUE"
  },
  {
    "objectID": "projects/project_example.html#assignment-2",
    "href": "projects/project_example.html#assignment-2",
    "title": "Project Template",
    "section": "Assignment 2",
    "text": "Assignment 2\n\nassign_2 = data |&gt; filter(course_name == 'Exploratory_Data_Analysis')\n\n#Attempts by Question for each course-lesson\nassign_2 |&gt; \n  ggplot(aes(x=question_number, y=attempt)) +\n  geom_col() +\n  facet_grid(~lesson_name, scales='free_x') + \n  theme_cowplot() +\n  theme(strip.text.x = element_text(size = 8)) +\n  labs(x='Q #', y='# Attempts')\n\n\n\n\n\n\n\n##Average of attempts for each lesson of Assignment\nlesson_counts_2 &lt;- assign_2 |&gt; count(lesson_name, question_number, student_id)\nlesson_counts_2$question_number = as.factor(lesson_counts_2$question_number)\nlesson_avgs_2 &lt;-  lesson_counts_2 %&gt;% group_by(lesson_name, question_number) %&gt;% summarise(avg = mean(n))\n\n##Compare for all lessons\nlesson_avgs_2 |&gt;\n  ggplot(aes(x=lesson_name, y=avg)) +\n  geom_boxplot(alpha = 0.5) +\n  geom_jitter() +\n  theme_cowplot() +\n  theme(axis.text.x = element_text(angle=90, hjust=1), strip.text.x = element_text(size = 8)) +\n  labs(y='Avg Attempts', x='Lesson')\n\n\n\n\n\n\n\n#Looking at dates completed\nassign_2 |&gt; \n  ggplot(aes(x=date, y=attempt)) +\n  geom_col() +\n  facet_grid(~lesson_name, scales='free_y') + \n  theme_cowplot() +\n  theme(axis.text.x = element_text(angle=90, hjust=1), strip.text.x = element_text(size = 8)) +\n  labs(x='Date', y='# Attempts')\n\n\n\n\n\n\n\n#Calendar Heatmap\ncalendar_df_2 &lt;- assign_2 %&gt;% count(date)\ndays_2 &lt;- calendar_df_2$n\ndays_2 &lt;- c(rep(0,7), days_2, rep(0,13))\n\ncalendR(from = \"2025-07-01\",\n        to = \"2025-07-30\",\n        special.days = days_2,\n        gradient = TRUE,\n        low.col = \"white\",\n        special.col = \"#FF0000\")\n\n\n\n\n\n\n\n#Looking at time of completion for each lesson\nassign_2 |&gt; \n  ggplot(aes(x=as.POSIXct(time, format=\"%H:%M\"), y=attempt)) +\n  geom_col() +\n  scale_x_datetime(\n            date_breaks = \"5 hour\",\n            date_labels = \"%H:%M\") +\n  theme_cowplot() +\n  theme(axis.text.x = element_text(angle=90, hjust=1), strip.text.x = element_text(size = 8)) +\n  labs(x='Time', y='# Attempts')"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Eleana Cabello",
    "section": "",
    "text": "Bio\n\n\nResearch Goals\n\n\nExperience"
  }
]